// <auto-generated />
using System;
using DormyWebService.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DormyWebService.Migrations
{
    [DbContext(typeof(DormyDbContext))]
    partial class DormyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DormyWebService.Models.AccountModels.Role", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Staff"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("DormyWebService.Models.AccountModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("DormyWebService.Models.Contract.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("LastUpdate");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("DormyWebService.Models.EquipmentModels.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("EquipmentTypeId");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("ImageUrl");

                    b.Property<DateTime>("LastUpdated");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.Property<int?>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("RoomId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("DormyWebService.Models.EquipmentModels.EquipmentType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("DormyWebService.Models.EvaluationScoreHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("ResultedScore");

                    b.Property<int>("TargetStudentId");

                    b.HasKey("Id");

                    b.HasIndex("TargetStudentId");

                    b.ToTable("EvaluationScoreHistories");
                });

            modelBuilder.Entity("DormyWebService.Models.RoomModels.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<DateTime>("LastUpdated");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("RoomTypeId");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DormyWebService.Models.RoomModels.RoomType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("DefaultCapacity");

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("DormyWebService.Models.StudentPriorityType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("StudentPriorityTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Type 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Type 2"
                        });
                });

            modelBuilder.Entity("DormyWebService.Models.AccountModels.Staff", b =>
                {
                    b.HasBaseType("DormyWebService.Models.AccountModels.User");

                    b.Property<bool>("Gender");

                    b.Property<string>("HomeTown");

                    b.Property<string>("IdentityCardId");

                    b.ToTable("Staffs");

                    b.HasDiscriminator().HasValue("Staff");
                });

            modelBuilder.Entity("DormyWebService.Models.AccountModels.Student", b =>
                {
                    b.HasBaseType("DormyWebService.Models.AccountModels.User");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("Money");

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<int?>("CurrentContractId");

                    b.Property<int>("EvaluationScore");

                    b.Property<bool>("Gender")
                        .HasColumnName("Student_Gender");

                    b.Property<string>("IdentityCardImageUrl");

                    b.Property<string>("IdentityNumber")
                        .IsRequired();

                    b.Property<bool>("IsRoomLeader");

                    b.Property<string>("PriorityImageUrl");

                    b.Property<int>("PriorityTypeId");

                    b.Property<int?>("RoomId");

                    b.Property<int>("StartedSchoolYear");

                    b.Property<string>("StudentCardImageUrl");

                    b.Property<string>("StudentCardNumber")
                        .IsRequired();

                    b.Property<int>("Term");

                    b.HasIndex("CurrentContractId");

                    b.HasIndex("PriorityTypeId");

                    b.HasIndex("RoomId");

                    b.ToTable("Students");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("DormyWebService.Models.EquipmentModels.Equipment", b =>
                {
                    b.HasOne("DormyWebService.Models.EquipmentModels.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DormyWebService.Models.RoomModels.Room")
                        .WithMany("Equipments")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("DormyWebService.Models.EvaluationScoreHistory", b =>
                {
                    b.HasOne("DormyWebService.Models.AccountModels.Student", "TargetStudent")
                        .WithMany()
                        .HasForeignKey("TargetStudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DormyWebService.Models.RoomModels.Room", b =>
                {
                    b.HasOne("DormyWebService.Models.RoomModels.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DormyWebService.Models.AccountModels.Student", b =>
                {
                    b.HasOne("DormyWebService.Models.Contract.Contract", "CurrentContract")
                        .WithMany()
                        .HasForeignKey("CurrentContractId");

                    b.HasOne("DormyWebService.Models.StudentPriorityType", "PriorityType")
                        .WithMany()
                        .HasForeignKey("PriorityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DormyWebService.Models.RoomModels.Room", "Room")
                        .WithMany("Students")
                        .HasForeignKey("RoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
