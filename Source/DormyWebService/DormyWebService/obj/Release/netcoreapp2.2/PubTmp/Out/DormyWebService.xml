<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DormyWebService</name>
    </assembly>
    <members>
        <member name="M:DormyWebService.Controllers.EquipmentsController.CreateEquipment(DormyWebService.ViewModels.EquipmentViewModels.CreateEquipment.CreateEquipmentRequest)">
            <summary>
            Create new Equipment for Admin
            </summary>
            <remarks>RoomId can be null</remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.EquipmentsController.UpdateEquipment(DormyWebService.ViewModels.EquipmentViewModels.UpdateEquipment.UpdateEquipmentRequest)">
            <summary>
            Update Equipment for Admin
            </summary>
            <remarks>RoomId can be null</remarks>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.NewsController.GetActiveNewsHeadlines">
            <summary>
            Get list of active news headlines for authorized users
            </summary>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.NewsController.AdvancedGetNewsHeadlines(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get list of news headlines with conditions, for authorized user
            </summary>
            <remarks></remarks>
            <param name="sorts">See GET /api/Rooms for examples</param>
            <param name="filters">See GET /api/Rooms for examples</param>
            <param name="page">See GET /api/Rooms for examples</param>
            <param name="pageSize">See GET /api/Rooms for examples</param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.NewsController.GetNewsHeadlines">
            <summary>
            Get list of news headlines for Staff and Admin
            </summary>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.NewsController.GetNewsDetail(System.Int32)">
            <summary>
            Get Detail of news,  for authorized users
            </summary>
            <param name="id">news id</param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.NewsController.CreateNews(DormyWebService.ViewModels.NewsViewModels.CreateNews.CreateNewsRequest)">
            <summary>
            Create new news, done by admin
            </summary>
        </member>
        <member name="M:DormyWebService.Controllers.NewsController.UpdateNews(DormyWebService.ViewModels.NewsViewModels.UpdateNews.UpdateNewsRequest)">
            <summary>
            Update News for admin
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.NewsController.ChangeNewsStatus(System.Int32,System.String)">
            <summary>
            Change News Status for Admin
            </summary>
            <param name="id">NewsId</param>
            <param name="status">Status you want to change to</param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.ParamsController.GetAllParams">
            <summary>
            Get All Params in database
            </summary>
            <remarks>authorization disabled for debug purposes</remarks>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.ParamsController.GetAllByParamType(System.Int32)">
            <summary>
            Get all Param of a Param Type
            </summary>
            <param name="paramTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.ParamsController.FindById(System.Int32)">
            <summary>
            Find a param by id
            </summary>
            <remarks>authorization disabled for debug purposes</remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.ParamsController.GetUserStatus">
            <summary>
            Get all user status stored in server
            </summary>
            <remarks>authorization disabled for debug purposes</remarks>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.ParamTypesController.GetAllParamTypes">
            <summary>
            See how many Param Types there are, have to be logged in to see
            </summary>
            <remarks>authorization disabled for debug purposes</remarks>
            See how many Param Types there are, have to be logged in to see
        </member>
        <member name="M:DormyWebService.Controllers.ParamTypesController.FindById(System.Int32)">
            <summary>
            Find Param Type by Id, have to be logged in to see
            </summary>
            <remarks>authorization disabled for debug purposes</remarks>
            //        [Authorize(Roles = Role.Admin)]
        </member>
        <member name="M:DormyWebService.Controllers.RoomBookingsController.SendRoomBooking(DormyWebService.ViewModels.TicketViewModels.RoomBooking.SendRoomBooking.SendRoomBookingRequest)">
            <summary>
            send room booking request for student
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:DormyWebService.Controllers.RoomBookingsController.ChangeRoomBookingStatus(DormyWebService.ViewModels.TicketViewModels.RoomBooking.ResolveRoomBooking.ResolveRoomBookingRequest)">
            <summary>
            Change status of a Room Booking Request, for staff
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.RoomsController.AdvancedGetRooms(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get list of room with pagination and condition, Authorization is not determined yet
            </summary>
            <param name="sorts">Ex:"Name,Description,-CreatedDate" sort by Name, then Description, then descendingly by CreatedDate</param>
            <param name="filters">Ex:"Price>10, Name@=roomName" filter to room with price more than 10, and a name that contains roomName</param>
            <param name="page">Ex: 1 get the first page...</param>
            <param name="pageSize">Ex: 10 ...which contains 10 room</param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.RoomsController.CreateRoom(DormyWebService.ViewModels.RoomViewModels.CreateRoom.CreateRoomRequest)">
            <summary>
            Create Room with multiple existing equipments, For Admin
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.RoomsController.UpdateRoom(DormyWebService.ViewModels.RoomViewModels.UpdateRoom.UpdateRoomRequest)">
            <summary>
            Update Room information, for admin, equipment is updated separately
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.StudentController.AdvancedGetStudent(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get student with condition, for admin and staff
            </summary>
            <param name="sorts">See GET /api/Rooms for examples</param>
            <param name="filters">See GET /api/Rooms for examples</param>
            <param name="page">See GET /api/Rooms for examples</param>
            <param name="pageSize">See GET /api/Rooms for examples</param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.StudentController.GetProfile(System.Int32)">
            <summary>
            Get Profile of student, for student 
            </summary>
            <param name="id">Student's id</param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.StudentController.UpdateStudent(System.Collections.Generic.List{DormyWebService.ViewModels.UserModelViews.ImportStudent.ImportStudentRequest})">
            <summary>
            Import List of Student, for admin
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.StudentController.UpdateStudent(DormyWebService.ViewModels.UserModelViews.UpdateStudent.UpdateStudentRequest)">
            <summary>
            Update profile for students and authorized users
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.StudentController.AdminChangeStudentStatus(System.Int32,System.String)">
            <summary>
            Activate/Disable Student for admin
            </summary>
            <param name="studentId"></param>
            /// <param name="status">Target Status</param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.UsersController.AdvancedGetUser(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get user with condition, for admin and staff
            </summary>
            <param name="sorts">See GET /api/Rooms for examples</param>
            <param name="filters">See GET /api/Rooms for examples</param>
            <param name="page">See GET /api/Rooms for examples</param>
            <param name="pageSize">See GET /api/Rooms for examples</param>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.UsersController.ChangeStatus(System.Int32,System.String)">
            <summary>
            Activate or disable user, for debug only, use this function in Student control instead
            </summary>
            <param name="id"></param>
            /// <param name="status">Target status</param>
        </member>
        <member name="M:DormyWebService.Controllers.UsersController.Login(DormyWebService.ViewModels.UserModelViews.Login.SocialUser)">
            <summary>
            For Login
            </summary>
        </member>
        <member name="M:DormyWebService.Controllers.UsersController.FindAll">
            <summary>
            Find all user for debug
            </summary>
            <returns></returns>
        </member>
        <member name="M:DormyWebService.Controllers.UsersController.ChangeUserRole(System.Int32,System.String)">
            <summary>
            Change user role for debug
            </summary>
        </member>
    </members>
</doc>
